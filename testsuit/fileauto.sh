#This shell is mainly used for testing files auto-generation.
#author : Mookel
#email  : ltp0709@sina.com
#usage  : ./fileauto.sh test_name
#output : test_suit.c(if necessary) test_name_test.c(unit-test file)

#!/bin/bash

#Must provide the test name ,or exit.
if [ ! -n "$1" ] ;then
    echo "Please input the test name."
    exit
else
    echo "The test name is $1."
fi

#If test_suit.c not existed, read mtest and create it.
test_suit_name="test_suit.c"
if [ ! -e ./$test_suit_name ]; then
	touch $test_suit_name
	if [ ! -e ./mtest ]; then
		echo "Error."
		exit
	fi
	model_test_string=`cat ./mtest`
	echo "$model_test_string" >> $test_suit_name
fi

test_name=$1
test_file_name=$1"_test.c"

####function used for generating test file
####arg1: test_file_name
generate_test_file() {
    echo "The file name is $1."
    echo "/*This file is generated by fileauto.sh used by test_suit.*/" >> $1
    echo "/*Author: Mookel, all rights reversed.*/" >> $1
    echo "" >> $1
    echo "#include <$1"".h>" >> $1
    echo "#include \"test_suit.h\"" >> $1
    echo "  " >> $1
    echo "int __$test_name""_test__()" >> $1
    echo "{" >> $1
    echo "  return 0;" >> $1
    echo "}" >> $1
}

if [ ! -e ./$test_file_name ];then
    touch $test_file_name
    ###Generate test file.
    generate_test_file $test_file_name
else
    rm -i $test_file_name
    if [ ! -e ./$test_file_name ]; then
        generate_test_file $test_file_name
    fi
fi

####find test flag exiseted or not, if existed, its up to you to decide whether replace it.
#### arg1 : test_suit_name arg2: test_name  arg3:test_string
find_and_replace_test_flag(){
    find_result=`cat $1 | grep "$3"`;
    if [ -n "$find_result" ]; then
        echo "The $2 has been added to test_suit."
        read -p "Do you want to repalce it ? (y/n): " command
        if [ -n $command ]; then
            if [ "$command" == "y" ]; then
                sed -i "" '/'"$3"'/d' $1
            else
                echo "Fuck, do nothing...."
                exit
            fi
        else
            echo "What the fuck do you wanna do? exit...."
        fi
    fi
}

###Decide the test macro whether existed and whether to replace it.
test_add_flag="TEST_ADD_FLAG(TRUE)"
add_test_string="ADD_TEST(\"$test_name\", $test_name);"
find_and_replace_test_flag $test_suit_name $test_name $add_test_string

###If going here, just add test macro into the test_suit.c file
tmpflag="fucktab"
addto="$tmpflag $add_test_string"
sed -i '' '/'"${test_add_flag}"'/i\
'"${addto}"'
' $test_suit_name
###replace flag with tab or space.
sed -i "" 's/fucktab/   /g' $test_suit_name


